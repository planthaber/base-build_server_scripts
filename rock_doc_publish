#! /bin/sh -ex

# This script allows to publish documentation generated by rock_doc_all
#
# Its behaviour is modified by the following environment variables:
#   SOURCE_DIR: the directory in which the documentation has been generated
#   TARGET_DIR: the directory in which the documentation should be generated
#   UPLOAD_USER: the user name to use to upload 
#   UPLOAD_PASSWD: the password (may be "$(cat /var/lib/jenkins/upload_passwd)" )
#   LFTP_OPTIONS: Options that get passed to LFTP on the mirror call
#
# It should be provided a set of arguments of the form
#   source_dir:target_dir
#
# where source_dir is one directory relative to SOURCE_DIR
#   and target_dir where it gets copied in TARGET_DIR

#HIDE OUTPUT
set +x
UPLOAD_PASSWD=`cat /var/lib/jenkins/upload_passwd`

if [ -x "$UPLOAD_PASSWD" ]; then
    echo "Could not extract upload password, please check if it is set correctly"
fi

set -ex


# Backup original website directory 
if test -d $TARGET_DIR; then
    rsync -r --delete $TARGET_DIR/ $TARGET_DIR-old/
fi

if [ ! -d $TARGET_DIR ]
then
    mkdir $TARGET_DIR
fi

cp $BULD_SCRIPT_DIR/template/* $TARGET_DIR
#The CP call does not copy all files, for secutiy copy (yet) only the .htaccess file specially
cp $BULD_SCRIPT_DIR/template/.htaccess $TARGET_DIR

if [ -n "$ARCHIVES" ]; then
    if [ -d $ARCHIVES ]; then
        cp -r $ARCHIVES $TARGET_DIR
    fi
fi

for source in "$@"; do
    source_dir=`echo $source | sed 's/:.*//'`
    target_dir=`echo $source | sed 's/.*://'`

    source_path=$SOURCE_DIR/$source_dir

    # Check whether there *is* documentation, and do a quick sanity check
    # - when we don't have a new documentation then fallback to the old one
    if ! ( test -d $source_path/ && test -f $source_path/index.html ); then
        if test -d $TARGET_DIR-old/$target_dir; then
            source_path=$TARGET_DIR-old/$target_dir
        else
            echo "no data available for $source_dir:$target_dir"
            exit 1
        fi
    fi

    # Extract documentation and api from each flavor to our 'export' 
    # directory 
    rsync -r --delete $source_path/ $TARGET_DIR/$target_dir/
done



# Fix permissions
chmod u=rwX -R ./
chmod go=rX -R ./

echo "Doing Upload"
# Copy the main documentation first
set +x #hide output it would contain the password
( cd www; lftp -c "open -u $UPLOAD_USER,$UPLOAD_PASSWD $TARGET_URL && mirror -v -R --only-newer --parallel=8 --delete $LFTP_OPTIONS --exclude status/ ./ www/" )
set -x #reenable output
echo "Upload Finished"
#( cd www; lftp -c "open $TARGET_URL && mirror -R --delete ./ www/" )

